name: 'checks'
description: ''
inputs:
  all:
    description: |
      Run all available checks.

      Default: false
    default: ${{ false }}
  github:
    description: |
      timezone-set
      has-token
      has-repository
      first-release
  git:
    description: |
      has-keypair

# outputs:
#   github:
#     value: |
#       {
#         "timezone-set": ${{ steps.github_timezone-set.outputs.value }},
#         "has-token": ${{ steps.github_has-token.outputs.value }},
#         "has-repository": ${{ steps.github_has-repository.outputs.value }},
#         "first-release": ${{ steps.github_first-release.outputs.value }}
#       }
#     description: ''
#   git:
#     value: |
#       {
#         "has-keypair": null,
#       }
#     description: ''

runs:
  using: composite
  steps:
    - run: |
        :
        JSON_TEMP="$RUNNER_TEMP/.json"
        [ ! -d "$JSON_TEMP" ] && mkdir -p "$JSON_TEMP"
        echo "{" | tee \
            "$JSON_TEMP/github.json" \
            "$JSON_TEMP/git.json"
        echo "json_temp="$JSON_TEMP" >>"$GITHUB_OUTPUT"
        echo "github=$JSON_TEMP/github.json" >>"$GITHUB_OUTPUT"
        echo "git=$JSON_TEMP/git.json" >>"$GITHUB_OUTPUT"
      shell: bash
      id: file

    - if: contains(inputs.github, 'timezone-set') || inputs.all == true
      run: |
        {
            [ "$(</etc/timezone)" != "America/New_York" ] &&
                val='false'
            echo "$(<${{ steps.file.outputs.github }}) \"timezone-set\": ${val:-true}," >"${{ steps.file.outputs.github }}"
        }; :
      shell: bash
      id: github_timezone-set

    # - if: contains(inputs.github, 'has-token') || inputs.all == true
    #   run: |
    #     {
    #         [ -z "$GH_TOKEN" ] &&
    #             echo "value=false" >>"$GITHUB_OUTPUT" ||
    #             echo "value=true" >>"$GITHUB_OUTPUT"
    #     }; :
    #   shell: bash
    #   id: github_has-token

    # - if: contains(inputs.github, 'has-repository') || inputs.all == true
    #   run: |
    #     {
    #         ! git status >/dev/null 2>&1 &&
    #             echo "value=false" >>"$GITHUB_OUTPUT" ||
    #             echo "value=true" >>"$GITHUB_OUTPUT"
    #     }; :
    #   shell: bash
    #   id: github_has-repository

    # - if: contains(inputs.github, 'first-release') || inputs.all == true
    #   run: |
    #     {
    #         if ! git describe --tags --abbrev=0 >/dev/null 2>&1 && ! gh release view >/dev/null 2>&1; then
    #             echo "value=true" >>"$GITHUB_OUTPUT"
    #         else
    #             echo "value=false" >>"$GITHUB_OUTPUT"
    #         fi
    #     }; :
    #   shell: bash
    #   id: github_first-release

    # - if: contains(inputs.git, 'has-keypair') || inputs.all == true
    #   run: |
    #     {
    #         GIT_SSH="$RUNNER_TEMP/.ssh"
    #         ! [ -f "$GIT_SSH/id_ed25519" -a -f "$GIT_SSH/id_ed25519.pub" ] &&
    #             echo "value=fail" >>"$GITHUB_OUTPUT" ||
    #             echo "value=true" >>"$GITHUB_OUTPUT"
    #         echo "GIT_SSH=$GIT_SSH" >>"$GITHUB_ENV"
    #     }; :
    #   shell: bash
    #   id: git_has-keypair

    - run: |
        :
        JSON_TEMP='${{ steps.file.outputs.json_temp }}'
        FILES=(
            github
            git
        )

        for file in "${FILES[@]}"; do
            echo "$(<$JSON_TEMP/$file) }" >"$JSON_TEMP/$file"
        done
      shell: bash
      id: json

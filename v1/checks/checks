#!/bin/bash

declare -A out
INPUT_GIT=($INPUT_GIT)
INPUT_GITHUB=($INPUT_GITHUB)
outputs=(
    git
    github
    path
)

for name in "${outputs[@]}"; do out[$name]="{"; done

####################
# Git
####################
for check in "${INPUT_GIT[@]}"; do
    echo "->check(git.$check)"

    # [ "$check" == has-keypair ] && {
    #     SSH_TEMP="$RUNNER_TEMP/.ssh"
    #     ! [ -f "$SSH_TEMP/id_ed25519" -a -f "$SSH_TEMP/id_ed25519.pub" ] &&
    #         val=false
    #     out[path]+=" \"ssh\": \"$SSH_TEMP\","
    # }

    # [ "$check" == is-configured ] && {
    #     [ "$(git config --global user.email)" != "bot@kamaranl.vip" ] &&
    #         val=false
    # }

    out[git]+=" \"$check\": ${val:-true},"
    unset val
done

####################
# GitHub
####################
for check in "${INPUT_GITHUB[@]}"; do
    echo "->check(github.$check)"

    # [ "$check" == timezone-set ] && {
    #     [ "$(</etc/timezone)" != "America/New_York" ] && val=false
    # }

    # [ "$check" == has-token ] && {
    #     [ -z "$GH_TOKEN" ] && val=false
    # }

    # [ "$check" == has-repository ] && {
    #     ! git status >/dev/null 2>&1 && val=false
    # }

    [ "$check" == first-release ] && {
        if git describe --tags --abbrev=0 >/dev/null 2>&1 &&
            gh release view --repo "$GITHUB_REPOSITORY" >/dev/null 2>&1; then
            val=false
        fi
    }

    [ "$check" == is-prerelease ] && {
        if [ "${GITHUB_BASE_REF:-github.base_ref}" == main ] &&
            [[ ${GITHUB_HEAD_REF:-github.head_ref} =~ ^dev(elop)?(ment)?$ ]]; then
            val=false
        fi
    }

    [ "$check" == ci-label ] && {
        exist=false
        for label in $(gh label list --json name --jq .[].name \
            --repo "$GITHUB_REPOSITORY"); do
            [ "$label" == ci ] && {
                exist=true
                break
            }
        done
        ! $exist && val=$exist
        out[path]+=" \"log\": \"$RUNNER_TEMP/.log\","
    }

    out[github]+=" \"$check\": ${val:-true},"
    unset val
done

for name in "${outputs[@]}"; do
    echo "$name=${out[$name]%,*} }" >>"$GITHUB_OUTPUT"
done

exit 0

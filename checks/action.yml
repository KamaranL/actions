name: 'checks'
description: ''
inputs:
  all:
    description: |
      [boolean] Run all available checks.

      Default: null
  github:
    description: |
      [string[]]
      timezone-set
      has-token
      has-repository
      first-release
  git:
    description: |
      [string[]]
      has-keypair

outputs:
  github:
    value: ${{ steps.json.outputs.github }}
    description: ''
  git:
    value: ${{ steps.json.outputs.git }}
    description: ''
  path:
    value: ${{ steps.json.outputs.path }}
    description: ''

runs:
  using: composite
  steps:
    - run: |
        :
        FILES=(
            github
            git
            path
        )
        JSON_TEMP="$RUNNER_TEMP/.json"
        [ ! -d "$JSON_TEMP" ] && mkdir -p "$JSON_TEMP"
        for file in "${FILES[@]}"; do
            JSON="$JSON_TEMP/$file.json"
            echo "{" >"$JSON"
            echo "$file=$JSON" >>"$GITHUB_OUTPUT"
        done
        echo "files=${FILES[@]}" >>"$GITHUB_OUTPUT"
        echo "json_temp=$JSON_TEMP" >>"$GITHUB_OUTPUT"
      shell: bash
      id: file

    - if: contains(inputs.github, 'timezone-set') || ${{ inputs.all }} == true
      run: |
        {
            [ "$(</etc/timezone)" != "America/New_York" ] && val='false'
            echo "$(<'${{ steps.file.outputs.github }}') \"timezone-set\": ${val:-true}," >'${{ steps.file.outputs.github }}'
        }; :
      shell: bash
      id: github_timezone-set

    - if: contains(inputs.github, 'has-token') || inputs.all == true
      run: |
        {
            [ -z "$GH_TOKEN" ] && val='false'
            echo "$(<'${{ steps.file.outputs.github }}') \"has-token\": ${val:-true}," >'${{ steps.file.outputs.github }}'
        }; :
      shell: bash
      id: github_has-token

    - if: contains(inputs.github, 'has-repository') || inputs.all == true
      run: |
        {
            ! git status >/dev/null 2>&1 && val='false'
            echo "$(<'${{ steps.file.outputs.github }}') \"has-repository\": ${val:-true}," >'${{ steps.file.outputs.github }}'
        }; :
      shell: bash
      id: github_has-repository

    - if: contains(inputs.github, 'first-release') || inputs.all == true
      run: |
        {
            if ! git describe --tags --abbrev=0 >/dev/null 2>&1 && ! gh release view >/dev/null 2>&1; then
                val='true'
            fi
            echo "$(<'${{ steps.file.outputs.github }}') \"first-release\": ${val:-false}," >'${{ steps.file.outputs.github }}'
        }; :
      shell: bash
      id: github_first-release

    - if: contains(inputs.git, 'has-keypair') || inputs.all == true
      run: |
        {
            SSH_TEMP="$RUNNER_TEMP/.ssh"
            ! [ -f "$SSH_TEMP/id_ed25519" -a -f "$SSH_TEMP/id_ed25519.pub" ] && val='false'
            echo "$(<'${{ steps.file.outputs.git }}') \"has-keypair\": ${val:-true}," >'${{ steps.file.outputs.git }}'
            echo "$(<'${{ steps.file.outputs.path }}') \"ssh\": \"$SSH_TEMP\"," >'${{ steps.file.outputs.path }}'
        }; :
      shell: bash
      id: git_has-keypair

    - run: |
        :
        FILES=(${{ steps.file.outputs.files }})
        JSON_TEMP='${{ steps.file.outputs.json_temp }}'
        for file in "${FILES[@]}"; do
            JSON="$JSON_TEMP/$file.json"
            CONTENT="$(<$JSON)"
            echo "$file=${CONTENT%,*} }" >>"$GITHUB_OUTPUT"
        done
      # rm -rf "$JSON_TEMP"
      shell: bash
      id: json

## ci/cd
name: setup
description: |
  1. Install bash 5 if running on macOS.
  2. Populate GH_TOKEN, if needed.
  3. Checkout repo, if needed.
  4. Call sub-jobs as specified.

## requires:
## <- env.OP_SERVICE_ACCOUNT_TOKEN

inputs:
  checkout:
    description: |
      Multiline string of parameters used by actions/checkout.
  identity:
    description: |
      Whether or not to run identity setup.

      Default: 'false'
    default: 'false'
  release:
    description: |
      Whether or not to run release setup.

      Default: 'false'
    default: 'false'
  semver:
    description: |
      Whether or not to run semver setup.

      Default: 'false'
    default: 'false'
  signing:
    description: |
      Whether or not to run signing setup.

      Default: 'false'
    default: 'false'

runs:
  using: composite
  steps:
    - if: runner.os == 'macOS'
      run: ((${BASH_VERSION:0:1} < 4)) && brew install bash
      shell: bash

    - run: $GITHUB_ACTION_PATH/pre.sh
      shell: bash
      env:
        INPUTS_CHECKOUT: ${{ inputs.checkout }}
      id: pre

    - if: runner.os == 'Linux'
      run: sudo timedatectl set-timezone "America/New_York"
      shell: bash

    - if: runner.os == 'macOS'
      run: sudo systemsetup -settimezone "America/New_York"
      shell: bash

    - if: runner.os == 'Windows'
      run: tzutil /s "Eastern Standard Time"
      shell: cmd

    - if: fromJson(steps.pre.outputs.gh_token) == false
      uses: KamaranL/1password-load-secrets-action@v1
      env:
        GH_TOKEN: op://Integrations/GitHub.kamaranl.CICD/credential

    - if: |
        fromJson(steps.pre.outputs.repository) == false &&
            inputs.checkout != null
      uses: actions/checkout@v4
      with:
        repository: ${{ steps.pre.outputs.checkout_repository }}
        ref: ${{ steps.pre.outputs.checkout_ref }}
        token: ${{ env.GH_TOKEN }}
        ssh-key: ${{ steps.pre.outputs.checkout_ssh-key }}
        ssh-known-hosts: ${{ steps.pre.outputs.checkout_ssh-known-hosts }}
        ssh-strict: ${{ steps.pre.outputs.checkout_ssh-strict }}
        persist-credentials: ${{ steps.pre.outputs.checkout_persist-credentials }}
        path: ${{ steps.pre.outputs.checkout_path }}
        clean: ${{ steps.pre.outputs.checkout_clean }}
        filter: ${{ steps.pre.outputs.checkout_filter }}
        sparse-checkout: ${{ steps.pre.outputs.checkout_sparse-checkout }}
        sparse-checkout-cone-mode: ${{ steps.pre.outputs.checkout_sparse-checkout-cone-mode }}
        fetch-depth: ${{ steps.pre.outputs.checkout_fetch-depth }}
        fetch-tags: ${{ steps.pre.outputs.checkout_fetch-tags }}
        show-progress: ${{ steps.pre.outputs.checkout_show-progress }}
        lfs: ${{ steps.pre.outputs.checkout_lfs }}
        submodules: ${{ steps.pre.outputs.checkout_submodules }}
        set-safe-directory: ${{ steps.pre.outputs.checkout_set-safe-directory }}
        github-server-url: ${{ steps.pre.outputs.checkout_github-server-url }}

    - if: fromJson(inputs.identity) == true
      uses: KamaranL/actions/setup/identity@v2-alpha

    - if: fromJson(inputs.semver) == true
      uses: KamaranL/actions/setup/semver@v2-alpha

    - if: fromJson(inputs.release) == true
      uses: KamaranL/actions/setup/release@v2-alpha

    - if: fromJson(inputs.signing) == true
      uses: KamaranL/actions/setup/signing@v2-alpha

## results:
## -> env.GH_TOKEN

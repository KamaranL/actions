name: 'checks'
description: ''
inputs:
  all:
    description: |
      [boolean] Run all available checks.

      Default: 'false'
    default: 'false'
  github:
    description: |
      [string[]]
      timezone-set
      has-token
      has-repository
      first-release
  git:
    description: |
      [string[]]
      has-keypair
      is-configured

outputs:
  github:
    value: ${{ steps.json.outputs.github }}
    description: ''
  git:
    value: ${{ steps.json.outputs.git }}
    description: ''
  path:
    value: ${{ steps.json.outputs.path }}
    description: ''

runs:
  using: composite
  steps:
    - run: |
        : # open files
        FILES=(
            github
            git
            path
        )
        JSON_TEMP="$RUNNER_TEMP/.json"
        [ ! -d "$JSON_TEMP" ] && mkdir -p "$JSON_TEMP"
        for file in "${FILES[@]}"; do
            JSON="$JSON_TEMP/$file"
            echo "{" >"$JSON"
            echo "$file=$JSON" >>"$GITHUB_OUTPUT"
            echo "::debug::>open($file)"
        done
        echo "files=${FILES[@]}" >>"$GITHUB_OUTPUT"
        echo "json_temp=$JSON_TEMP" >>"$GITHUB_OUTPUT"
      shell: bash
      id: file

    - if: contains(inputs.github, 'timezone-set') || ${{ inputs.all }} == true
      run: |
        { # github.timezone-set
            echo "::debug::>check(github.timezone-set)"
            [ "$(</etc/timezone)" != "America/New_York" ] && val="false"
            echo "$(<"${{ steps.file.outputs.github }}") \"timezone-set\": ${val:-true}," >"${{ steps.file.outputs.github }}"
        }; :
      shell: bash

    - if: contains(inputs.github, 'has-token') || ${{ inputs.all }} == true
      run: |
        { # github.has-token
            echo "::debug::>check(github.has-token)"
            [ -z "$GH_TOKEN" ] && val="false"
            echo "$(<"${{ steps.file.outputs.github }}") \"has-token\": ${val:-true}," >"${{ steps.file.outputs.github }}"
        }; :
      shell: bash

    - if: contains(inputs.github, 'has-repository') || ${{ inputs.all }} == true
      run: |
        { # github.has-repository
            echo "::debug::>check(github.has-repository)"
            ! git status >/dev/null 2>&1 && val="false"
            echo "$(<"${{ steps.file.outputs.github }}") \"has-repository\": ${val:-true}," >"${{ steps.file.outputs.github }}"
        }; :
      shell: bash

    - if: contains(inputs.github, 'release') || ${{ inputs.all }} == true
      run: |
        { # github.first-release
            echo "::debug::>check(github.first-release)"
            if ! git describe --tags --abbrev=0 >/dev/null 2>&1 && ! gh release view >/dev/null 2>&1; then
                val="true"
            fi
            echo "$(<"${{ steps.file.outputs.github }}") \"first-release\": ${val:-false}," >"${{ steps.file.outputs.github }}"
        }; :
      shell: bash

    - if: contains(inputs.github, 'release') || ${{ inputs.all }} == true
      run: |
        { # github.is-release, github.is-prerelease
            echo "::debug::>check(github.is-release, github.is-prerelease)"
            if [ "${{ github.base_ref }}" == main ] &&
                [[ $name =~ ^dev(elop)?(ment)?$ ]]; then
                echo "$(<"${{ steps.file.outputs.github }}") \"is-release\": true," >"${{ steps.file.outputs.github }}"
                echo "$(<"${{ steps.file.outputs.github }}") \"is-prerelease\": false," >"${{ steps.file.outputs.github }}"
            else
                echo "$(<"${{ steps.file.outputs.github }}") \"is-prerelease\": true," >"${{ steps.file.outputs.github }}"
                echo "$(<"${{ steps.file.outputs.github }}") \"is-release\": false," >"${{ steps.file.outputs.github }}"
            fi
        }; :
      shell: bash

    - if: contains(inputs.git, 'has-keypair') || ${{ inputs.all }} == true
      run: |
        { # git.has-keypair, path.ssh
            echo "::debug::>check(git.has-keypair)"
            SSH_TEMP="$RUNNER_TEMP/.ssh"
            ! [ -f "$SSH_TEMP/id_ed25519" -a -f "$SSH_TEMP/id_ed25519.pub" ] && val="false"
            echo "$(<"${{ steps.file.outputs.git }}") \"has-keypair\": ${val:-true}," >"${{ steps.file.outputs.git }}"
            echo "$(<"${{ steps.file.outputs.path }}") \"ssh\": \"$SSH_TEMP\"," >"${{ steps.file.outputs.path }}"
        }; :
      shell: bash

    - if: contains(inputs.git, 'is-configured') || ${{ inputs.all }} == true
      run: |
        { # git.is-configured
            echo "::debug::>check(git.is-configured)"
            [ "$(git config --global user.email)" != "bot@kamaranl.vip" ] && val=false
            echo "$(<"${{ steps.file.outputs.git }}") \"is-configured\": ${val:-true}," >"${{ steps.file.outputs.git }}"
        }; :
      shell: bash

    - run: |
        : # close files, redirect files to output
        FILES=(${{ steps.file.outputs.files }})
        JSON_TEMP="${{ steps.file.outputs.json_temp }}"
        for file in "${FILES[@]}"; do
            JSON="$JSON_TEMP/$file"
            CONTENT="$(<$JSON)"
            echo "$file=${CONTENT%,*} }" >>"$GITHUB_OUTPUT"
            echo "::debug::>close($file)"
        done
        rm -rf "$JSON_TEMP"
      shell: bash
      id: json

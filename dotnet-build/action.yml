## cd
name: dotnet-build
description: |
  1. Search for solution/project files if not provided as input.
  2. Identify whether building a single solution, single project, or multiple projects.
  3. Compile solution/projects to "out" directory using parameters and/or release identifiers.

## requires:
## <- KamaranL/actions/setup: [checkout, release]

inputs:
  out:
    required: true
    description: |
      Directory path where build artifacts will be stored.
  params:
    description: |
      Command-line arguments for `dotnet publish`.
  project:
    description: |
      Multiline list of project file paths to build.
      This input has **no** effect if "solution" is set.
  release-ids:
    description: |
      Multiline list of release identifiers.
      This input has **no** effect if "solution" is set.
  solution:
    description: |
      Path of solution file to compile.

outputs:
  out-dir:
    description: |
      Full directory path of where build artifacts are stored.
    value: ${{ steps.main.outputs.out-dir }}

runs:
  using: composite
  steps:
    - run: $GITHUB_ACTION_PATH/main.sh
      shell: bash
      env:
        INPUTS_OUT: ${{ inputs.out }}
        INPUTS_PARAMS: ${{ inputs.params }}
        INPUTS_PROJ: ${{ inputs.project }}
        INPUTS_RIDS: ${{ inputs.release-ids }}
        INPUTS_SLN: ${{ inputs.solution }}
      id: main

name: 'setup-ci'
description: ''
inputs:
  nuget:
    description: ''
    default: 'false'

runs:
  using: composite
  steps:
    - if: github.event != 'pull_request'
      run: |
        echo "::notice::${{ github.workflow }} will only complete successfully on \"pull_request\""
      shell: bash

    - uses: KamaranL/actions/setup@v0
      with:
        fetch-depth: 0

    - uses: gittools/actions/gitversion/setup@v0.11
      with:
        versionSpec: 5.x

    - uses: gittools/actions/gitversion/execute@v0.11
      with:
        useConfigFile: true
        configFilePath: ${{ github.action_path }}/GitVersion.yml

    - uses: KamaranL/actions/checks@v0
      with:
        github: |
          release
      id: checks

    - if: |
        fromJson(steps.checks.outputs.github).is-release == true &&
            fromJson(steps.checks.outputs.github).first-release == true
      run: |
        { # set CI_VERSION (first release)
            echo "CI_VERSION=1.0.0" >>"$GITHUB_ENV"
        }; :
      shell: bash

    - if: |
        fromJson(steps.checks.outputs.github).is-release == true &&
            fromJson(steps.checks.outputs.github).first-release == false
      run: |
        { # set CI_VERSION (release)
            echo "CI_VERSION=$GitVersion_MajorMinorPatch" >>"$GITHUB_ENV"
        }; :
      shell: bash

    - if: fromJson(steps.checks.outputs.github).is-prerelease == true
      run: |
        { # set CI_VERSION (prerelease)
            echo "CI_VERSION=$GitVersion_FullSemVer" >>"$GITHUB_ENV"
        }; :
      shell: bash

    - if: fromJson(steps.checks.outputs.github).is-prerelease == true && ${{ inputs.nuget }} == true
      run: |
        { # set CI_VERSION (nuget-compatible prerelease)
            echo "CI_VERSION=${GitVersion_FullSemVer%.*}${GitVersion_FullSemVer##*.}" >>"$GITHUB_ENV"
        }; :
      shell: bash

    - run: |
        { # set CI_SOURCE_BRANCH
            echo "CI_SOURCE_BRANCH=$GITHUB_HEAD_REF" >>"$GITHUB_ENV"
        }; :
      shell: bash

name: 'checks'
description: ''
inputs:
  check:
    description: |
      [string[]] {timezone,gh_token,repository,tags_releases,all}

      Default: 'all'
    default: 'all'

outputs:
  json:
    description: ''
    value: |
      ${{
        toJson({
            "timezone": "${{ steps.timezone.outputs.check }}",
            "gh_token": "${{ steps.gh_token.outputs.check }}",
            "repository": "${{ steps.repository.outputs.check }}",
            "tags_releases": "${{ steps.tags_releases.outputs.check }}"
        })
      }}
  raw:
    description: ''
    value: |
      {
          "timezone": "${{ steps.timezone.outputs.check }}",
          "gh_token": "${{ steps.gh_token.outputs.check }}",
          "repository": "${{ steps.repository.outputs.check }}",
          "tags_releases": "${{ steps.tags_releases.outputs.check }}"
      }
  timezone:
    value: ${{ steps.timezone.outputs.check }}
    description: ''
  gh_token:
    value: ${{ steps.gh_token.outputs.check }}
    description: ''
  repository:
    value: ${{ steps.repository.outputs.check }}
    description: ''
  tags_releases:
    value: ${{ steps.tags_releases.outputs.check }}
    description: ''

runs:
  using: composite
  steps:
    - if: contains(inputs.check, 'timezone') || inputs.check == 'all'
      run: |
        {
            [ "$(</etc/timezone)" != "America/New_York" ] &&
                echo "check=fail" >>"$GITHUB_OUTPUT"
        }; :
      shell: bash
      id: timezone

    - if: contains(inputs.check, 'gh_token') || inputs.check == 'all'
      run: |
        {
            [ -z "$GH_TOKEN" ] &&
                echo "check=fail" >>"$GITHUB_OUTPUT"
        }; :
      shell: bash
      id: gh_token

    - if: contains(inputs.check, 'repository') || inputs.check == 'all'
      run: |
        {
            ! git status >/dev/null 2>&1 &&
                echo "check=fail" >>"$GITHUB_OUTPUT"
        }; :
      shell: bash
      id: repository

    - if: contains(inputs.check, 'tags_releases') || inputs.check == 'all'
      run: |
        {
            if ! git describe --tags --abbrev=0 >/dev/null 2>&1 && ! gh release view >/dev/null 2>&1; then
                echo "tags_releases=fail" >>"$GITHUB_OUTPUT"
            fi
        }; :
      shell: bash
      id: tags_releases
